#!/usr/bin/env ruby

require 'logger'
require 'optparse'

require 'aws/ses'
require 'thread/pool'

THREAD_POOL_SIZE = 4

logger = Logger.new('log/email.log')
options = OpenStruct.new

option_parser = OptionParser.new do |opts|
  opts.on('-r', '--recipients FILE', 'File with email addresses, one per line') do |file|
    options.recipients = File.read(file).each_line.map(&:strip)
  end

  opts.on('-e', '--email FILE', 'Email to send (HTML)') do |file|
    options.email = File.read(file)
  end

  opts.on('-s', '--subject SUBJECT', 'Email subject') do |subject|
    options.subject = subject
  end

  opts.on('-f', '--from EMAIL_ADDRESS', "The email's sender address") do |email|
    options.from = email
  end
end

option_parser.parse(ARGV)

ses = AWS::SES::Base.new(
  access_key_id: ENV.fetch('AWS_ACCESS_KEY_ID'),
  secret_access_key: ENV.fetch('AWS_SECRET_ACCESS_KEY'),
  server: 'email.eu-west-1.amazonaws.com'
)

pool = Thread.pool(THREAD_POOL_SIZE)

options.recipients.each do |recipient|
  pool.process do
    ses.send_email(
      to: recipient,
      source: options.from,
      subject: options.subject,
      html_body: options.email
    )
    logger.info("Email to #{recipient} sent")
  rescue InvalidParameterValue => e
    logger.error("Email to #{recipient} not sent: #{e.message}")
  end
end

print 'Press any key when done.'
$stdin.gets
